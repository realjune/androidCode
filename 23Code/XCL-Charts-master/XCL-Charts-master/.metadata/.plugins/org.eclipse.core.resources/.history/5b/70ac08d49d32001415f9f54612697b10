/**
 * Copyright 2014  XCL-Charts
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *     http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 	
 * @Project XCL-Charts 
 * @Description Android图表基类库
 * @author XiongChuanLiang<br/>(xcl_168@aliyun.com)
 * @license http://www.apache.org/licenses/  Apache v2 License
 * @version 1.5
 */
package org.xclcharts.chart;

import java.util.LinkedHashMap;

import org.xclcharts.renderer.XEnum;
import org.xclcharts.renderer.line.PlotDot;

import android.graphics.Color;
import android.graphics.Paint;



/**
 * @ClassName ScatterData
 * @Description 数据类, 曲线图用这个传数据
 * @author XiongChuanLiang<br/>(xcl_168@aliyun.com)
 *  
 */

public class ScatterData {
	
	//标签轴用的到值
	private String mLabel;
	//是否在点上显示标签
	private boolean mLabelVisible = false;

	//线上每个点的值
	private LinkedHashMap<Double,Double> mLinePointMap ;
	
	//private int mColor = Color.BLACK;
	
	private XEnum.DotStyle mDotStyle = XEnum.DotStyle.DOT;
	
	private Paint mLabelPaint = null;
	
	private PlotDot mPlotDot = null;
	
	
	/**
	 * 构成一条完整的线条
	 * @param lineKey 	 对应的键值		
	 * @param dataSeries  对应的数据序列
	 * @param color  线条颜色
	 */
	public ScatterData(String lineKey,					
						LinkedHashMap<Double,Double> dataSeries,
						int color,
						XEnum.DotStyle  dotStyle) {
		// TODO Auto-generated constructor stub
	
		setKey(lineKey);			
		setDataSet(dataSeries);
	
		getPlotDot().getDotPaint().setColor(color);		
		getPlotDot().setDotStyle(dotStyle);		
	}	
	
	/**
	 * 设置绘制线的数据序列,由x与y坐标构建
	 * @param dataSeries <X坐标值，Y坐标值>
	 */
	public void setDataSet( LinkedHashMap<Double,Double>  dataSeries) 
	{
		mLinePointMap = dataSeries;
	}
	
	/**
	 * 返回绘制线的数据序列
	 * @return 线的数据序列<X坐标值，Y坐标值>
	 */
	public LinkedHashMap<Double,Double> getDataSet() {
		return mLinePointMap;
	}
	
	/**
	 * 设置是否在线上显示标签
	 * @param visible 是否显示
	 */
	public void setLabelVisible(boolean visible) 
	{
		mLabelVisible = visible;
	}
	
	/**
	 * 返回是否在线上显示标签
	 * @return 是否显示
	 */
	public boolean getLabelVisible()
	{
		return mLabelVisible;
	}
	
	/**
	 * 设置标签
	 * @param value 标签内容
	 */
	public void setLabel(String value) 
	{
		mLabel = value;
	}
	
	/**
	 * 返回标签
	 * @return 标签
	 */
	public String getLabel() {
		return mLabel;
	}

	
	/**
	 * 设置当前记录的Key值
	 * @param value Key值
	 */
	public void setKey(String value) 
	{
		mLabel = value;
	}
	/**
	 * 返回Key值
	 * @return Key值
	 */
	public String getKey() {
		return mLabel;
	}
	
	/**
	 * 开放标签画笔
	 * @return 画笔
	 */
	public Paint getDotLabelPaint()
	{
		if(null == mLabelPaint) mLabelPaint = new Paint(Paint.ANTI_ALIAS_FLAG);
		
		return mLabelPaint;
	}
	
	

	
	public PlotDot getPlotDot()
	{
		if(null == mPlotDot) mPlotDot = new PlotDot();
		return mPlotDot;
	}
	
	
}
